例子背景：
随着客户的要求越来越高，宝马车需要不同配置的发动机等配件。
于是这个工厂开始生产发动机，用来组装汽车。
宝马320系列配置A型号发动机，宝马523系列配置B型号发动机。

概念：
   抽象工厂模式是工厂方法模式的升级版本，他用来创建一组相关或者相互依赖的对象。
   比如宝马320系列使用发动机型号A，而宝马230系列使用发动机型号B，
   那么使用抽象工厂模式，在为320系列生产相关配件时，就无需制定配件的型号，它会自动根据车型生产对应的配件型号A。

结合本例如下：
   当每个抽象产品都有多于一个的具体子类的时候（发动机有型号A和B两种），
   工厂角色怎么知道实例化哪一个子类呢？比如每个抽象产品角色都有两个具体产品。
   抽象工厂模式提供两个具体工厂角色（宝马320系列工厂和宝马523系列工厂），分别对应于这两个具体产品角色，
   每一个具体工厂角色只负责某一个产品角色的实例化。每一个具体工厂类只负责创建抽象产品的某一个具体子类的实例。
